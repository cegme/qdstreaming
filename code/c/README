

# Cpp test for close and far sampling


# FileBackedMatrix.c

Use the Makefile to compile the source.
The default is to make with the debugging options.    

To make with optimization flags use `make all`.

To understand which compile flags are enabled use
the help command.

		gcc -march=native -O3 -l -Q --help=target FileBackedMatrix.c


# Running the code

Here is an example run

    ./a.out -d 0.1 -s 1000000 -c 500 -r 50000 -f /tmp/mymatrix.mat

The command line paramters are the following:

  `-s` The number of samples
  `-d` The distance window
  `-c` The number of columns
  `-r` The number of rows 
  `-f` The file for the matrix

You can estimate the size of the temporary matrix by multiplying
the `rows x cols x 4 (bytes)`.
The 4 bytes is the size of the float.
The current version only uses floats.
This may change in the future.

# Running tests

I wrote a script `matrixtest.sh` to run several test on different
parameter ranges and print the results to stdout.
To run th result you may execute the following command:

    time bash matrixtest.sh | tee results.log

The `tee` command will print all log into to the terminal.
Note that only output from stdout will be saved to the file.

The format of the output is the following:

    row|col|sample|dist|memory(bytes)|avgdist|matrixbuildtime(msecs)|sampletime(msecs)

For each line the size of the `row` and `col` are returned.
Following this is the number of samples (`sample`) and the distance multiplier between samples (`dist`).
Next, is the number of free bytes in memory right before program execution (`memory (bytes)`). 	
Following is the average distance between each sample `avgdist`, the amout of time 
in miliseconds it took to build the matrix, and then the amount of time it took to perform 
all samples.

